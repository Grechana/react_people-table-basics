{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PeoplePage","useState","peopleFromServer","setPeopleFromServer","loading","setLoading","isError","setIsError","slugName","useParams","useEffect","people","catch","finally","length","map","person","mother","find","pers","name","motherName","father","fatherName","slug","sex","born","died","classNames","to","getLinkClass","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.988b61b2.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\n\nexport const PeoplePage = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n  const { slugName } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getPeople()\n      .then((people) => {\n        setPeopleFromServer(people);\n        setLoading(false);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {loading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!loading && peopleFromServer.length < 1 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!loading && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {peopleFromServer.map(person => {\n                  const mother = peopleFromServer\n                    .find(pers => pers.name === person.motherName);\n                  const father = peopleFromServer\n                    .find(pers => pers.name === person.fatherName);\n\n                  const {\n                    name,\n                    slug,\n                    sex,\n                    born,\n                    died,\n                    motherName,\n                    fatherName,\n                  } = person;\n\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={slug}\n                      className={classNames({\n                        'has-background-warning': slug === slugName,\n                      })}\n                    >\n                      <td>\n                        <Link\n                          className={\n                            sex === 'f' ? 'has-text-danger' : ''\n                          }\n                          to={`/people/${slug}`}\n                        >\n                          {name}\n                        </Link>\n                      </td>\n\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n\n                      {mother ? (\n                        <td>\n                          <Link to={`/people/${mother.slug}`} className=\"has-text-danger\">\n                            {mother.name}\n                          </Link>\n                        </td>\n                      ) : (\n                        <td>{motherName || '-'}</td>\n                      )}\n\n                      {father ? (\n                        <td>\n                          <Link to={`/people/${father.slug}`}>\n                            {father.name}\n                          </Link>\n                        </td>\n                      ) : (\n                        <td>{fatherName || '-'}</td>\n                      )}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\n  Routes,\n  Route,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slugName\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}